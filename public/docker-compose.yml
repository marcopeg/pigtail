version: '2.1'
services:

    postgres:
        image: timescale/timescaledb:1.2.0-pg11
        networks:
            - production
        ports:
            - ${PG_PORT:-5053}:5432
        environment:
            POSTGRES_USER: ${PG_USERNAME}
            POSTGRES_PASSWORD: ${PG_PASSWORD}
            POSTGRES_DB: ${PG_DATABASE}
        volumes:
            - ./data/pg:/var/lib/postgresql/data
        restart: always
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-d", "content", "-U", "rawb_content_user"]
            interval: 10s
            timeout: 10s
            retries: 10

    grafana:
        image: grafana/grafana:5.4.3
        networks:
            - production
        ports:
            - ${GRAFANA_PORT}:3000
        environment:
            GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
        volumes:
            - ./data/grafana:/var/lib/grafana

    barn:
        image: marcopeg/rapha-barn:${VERSION:-latest}
        networks:
            - production
        ports:
            - ${SERVER_PORT}:8080
        environment:
            PG_HOST: postgres
            PG_PORT: 5432
            PG_DATABASE: ${PG_DATABASE}
            PG_USERNAME: ${PG_USERNAME}
            PG_PASSWORD: ${PG_PASSWORD}
            API_TOKEN: ${API_TOKEN}

    reaper:
        image: marcopeg/rapha-reaper:${VERSION:-latest}
        networks:
            - production
        environment:
            HOST_NAME: ${HOST_NAME}
            API_ENDPOINT: ${API_ENDPOINT}
            API_TOKEN: ${API_TOKEN}
        volumes:
            - /var/lib/docker/containers:/var/lib/docker/containers:ro
            - /var/run/docker.sock:/var/run/docker.sock

networks:
    production:
