version: '2.1'
services:

    barn:
        image: pigtail/barn:${VERSION:-latest}
        networks:
            - ${NETWORK:-pigtail}
        depends_on:
            - postgres
        environment:
            PG_HOST: postgres
            PG_PORT: 5432
            PG_DATABASE: ${PG_DATABASE:-postgres}
            PG_USERNAME: ${PG_USERNAME:-postgres}
            PG_PASSWORD: ${PG_PASSWORD:-postgres}
            API_DEFAULT_TOKEN: ${API_TOKEN:-xxx}
        restart: always

    reaper:
        image: pigtail/reaper:${VERSION:-latest}
        networks:
            - ${NETWORK:-pigtail}
        environment:
            HOST_NAME: ${HOST_NAME:-localhost}
            API_ENDPOINT: ${API_ENDPOINT:-http://barn:8080/api}
            API_TOKEN: ${API_TOKEN:-xxx}
        volumes:
            - /var/lib/docker/containers:/var/lib/docker/containers:ro
            - /var/run/docker.sock:/var/run/docker.sock
        restart: always

    grafana:
        image: grafana/grafana:5.4.3
        networks:
            - ${NETWORK:-pigtail}
        environment:
            GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-pigtail}
            GF_SERVER_ROOT_URL: http://grafana:3000/grafana/
        volumes:
            - ./data/grafana:/var/lib/grafana
        restart: always

    boards:
        image: grafana/grafana:5.4.3
        networks:
            - ${NETWORK:-pigtail}
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-pigtail}
            - GF_SERVER_ROOT_URL=http://grafana:3000/boards/
            - GF_AUTH_PROXY_AUTO_SIGN_UP=false
            - GF_AUTH_PROXY_ENABLED=true
        volumes:
            - ${HUMBLE_DATA}/grafana:/var/lib/grafana
        restart: always

    postgres:
        image: timescale/timescaledb:1.2.0-pg11
        networks:
            - ${NETWORK:-pigtail}
        ports:
            - ${PG_PORT-5053}:5432
        environment:
            POSTGRES_USER: ${PG_USERNAME:-postgres}
            POSTGRES_PASSWORD: ${PG_PASSWORD:-postgres}
            POSTGRES_DB: ${PG_DATABASE:-postgres}
        volumes:
            - ./data/pg:/var/lib/postgresql/data
        restart: always

    proxy:
        image: pigtail/proxy:${VERSION:-latest}
        depends_on:
            - barn
            - boards
            - grafana
            - postgres
        networks:
            - ${NETWORK:-pigtail}
        environment:
            - BOARDS_ENABLED=${BOARDS_ENABLED:-false}
            - BOARDS_TOKEN=${BOARDS_TOKEN:-xxx}
        ports:
            - ${SERVER_PORT:-80}:80
        restart: always

networks:
    pigtail:
